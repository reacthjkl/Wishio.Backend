// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wishio.Persistance;
using Wishio.Persistence;

#nullable disable

namespace Wishio.Persistance.Migrations
{
    [DbContext(typeof(WishioContext))]
    [Migration("20251019170842_WishlistThemeNonNullable")]
    partial class WishlistThemeNonNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("Wishio.Persistence.Entities.Picture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("newid()");

                    b.Property<byte[]>("BinaryData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("ContentType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("Wishio.Persistence.Entities.Wish", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("newid()");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PictureId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WishlistId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PictureId");

                    b.HasIndex("WishlistId");

                    b.ToTable("Wishes");
                });

            modelBuilder.Entity("Wishio.Persistence.Entities.Wishlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("newid()");

                    b.Property<Guid?>("CustomThemePictureId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PictureId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Theme")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomThemePictureId");

                    b.HasIndex("PictureId");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("Wishio.Persistence.Entities.Wish", b =>
                {
                    b.HasOne("Wishio.Persistence.Entities.Picture", "Picture")
                        .WithMany()
                        .HasForeignKey("PictureId");

                    b.HasOne("Wishio.Persistence.Entities.Wishlist", "Wishlist")
                        .WithMany("Wishes")
                        .HasForeignKey("WishlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Picture");

                    b.Navigation("Wishlist");
                });

            modelBuilder.Entity("Wishio.Persistence.Entities.Wishlist", b =>
                {
                    b.HasOne("Wishio.Persistence.Entities.Picture", "CustomThemePicture")
                        .WithMany()
                        .HasForeignKey("CustomThemePictureId");

                    b.HasOne("Wishio.Persistence.Entities.Picture", "Picture")
                        .WithMany()
                        .HasForeignKey("PictureId");

                    b.Navigation("CustomThemePicture");

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("Wishio.Persistence.Entities.Wishlist", b =>
                {
                    b.Navigation("Wishes");
                });
#pragma warning restore 612, 618
        }
    }
}
